server:
  port: 5000
  error:
    whitelabel:
      enabled: false
    include-stacktrace: never
    include-exception: false
  servlet:
    session:
      timeout: 15m
spring:
  datasource:
    url: ${DATASOURCE_URL}
    username: ${DATASOURCE_USERNAME}
    password: ${DATASOURCE_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: create
    generate-ddl: true
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        show_sql: true
        dialect: org.hibernate.dialect.MySQLDialect
    open-in-view: false
  servlet:
    multipart:
      max-file-size: 200MB
      max-request-size: 200MB
  security:
    debug: true
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_SECRET}
            redirect-uri: ${GOOGLE_REDIRECT_URI}
            scope:
              - profile
              - email
              - openid
  data:
    redis:
      host: ${REDIS_HOST}
      port: 6379
      entry-ttl-minutes: 20
      cache-prefix: "spring:cache:"
  session:
    redis:
      namespace: spring:session
    timeout: 15m
auth:
  refresh-token:
    refresh-exp-hours: 12
    name: "refresh-token"
  jwt:
    auth-exp-minutes: 180
    secret-key: ${JWT_SECRET_KEY}
    issuer: ${JWT_SECRET_ISSUER}
cors:
  allowed: ${CORS_ALLOWED}
resilience4j.circuitbreaker:
  instances:
    backendA:
      slidingWindowSize: 10
      minimumNumberOfCalls: 5
      permittedNumberOfCallsInHalfOpenState: 3
      waitDurationInOpenState: 5s
      failureRateThreshold: 50
cloud:
  aws:
    region:
      static: ${AWS_REGION}
    s3:
      bucket: ${AWS_BUCKET}
cdn:
  baseUrl: ${CDN_BASE_URL}
